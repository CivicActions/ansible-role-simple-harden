---

## SSH Daemon remediations

- name: SSH - Make updates in /etc/ssh/sshd_config
  lineinfile: dest=/etc/ssh/sshd_config regexp="^{{ item.name }} " line="{{ item.name }} {{ item.value }}"
  with_items:
    - { name: 'Protocol',                value: '2'          }
    - { name: 'StrictModes',             value: 'yes'        }
    - { name: 'UsePrivilegeSeparation',  value: 'yes'        }
    - { name: 'PermitEmptyPasswords',    value: 'no'         }
    - { name: 'PermitRootLogin',         value: 'no'         }
    - { name: 'HostbasedAuthentication', value: 'no'         }
    - { name: 'Compression',             value: 'delayed'    }
    - { name: 'GSSAPIAuthentication',    value: 'no'         }
    - { name: 'KerberosAuthentication',  value: 'no'         }
    - { name: 'PermitUserEnvironment',   value: 'no'         }
    - { name: 'ClientAliveCountMax',     value: '0'          }
    - { name: 'IgnoreUserKnownHosts',    value: 'yes'        }
    - { name: 'RhostsRSAAuthentication', value: 'no'         }
    - { name: 'Banner',                  value: '/etc/issue' }
    - { name: 'ClientAliveInterval',     value: '600'        }
    - { name: 'Ciphers', value: 'aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc' }
    - { name: 'MACs',    value: 'hmac-sha2-512,hmac-sha2-256,hmac-sha1' }
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: SSH - Move issue to issue.orig
  command: mv /etc/issue /etc/issue.orig creates=/etc/issue.orig

- name: SSH - Copy issue banner
  copy: src=issueBanner.txt
        dest=/etc/issue

- name: SSH - Limit the Number of Concurrent Login Sessions Allowed Per User
  copy: src=maxlogins.txt
        dest=/etc/security/limits.d/50-limit-maxlogins.conf
        seuser=system_u
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: SSH - Set modes of SSH public certificates (0644 -> pub)
  file:
    path: "{{ item }}"
    mode: 0644
  with_fileglob:
    /etc/ssh/*.pub

- name: SSH - Set modes of SSH public certificates (0600 -> key)
  file:
    path: "{{ item }}"
    mode: 0600
  with_fileglob:
    /etc/ssh/*.key
